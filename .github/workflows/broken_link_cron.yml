name: Open a PR to remove broken links on a schedule

on:
  workflow_dispatch:
  schedule:
  - cron: '0 0 * * *'

permissions:
  issues: write
  pull-requests: write

jobs:
  check-for-broken-links:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    # see https://github.com/ad-m/github-push-action#example-workflow-file
    steps:
    - uses: actions/checkout@v3
      # with:
      #   persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
      #   fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

    - uses: actions/setup-node@v3
      with:
        node-version: 13

    - uses: ipfs/aegir/actions/cache-node-modules@master
      with:
        directories: |
          README.md
        build: |
          npm run build:readme
        cache_name: readme

    - name: Set up Ruby 3.1.2
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1.2

    # Cache the files created by awesome_bot
    - name: Cache awesome_bot files
      uses: actions/cache@v3
      id: awesome_bot_cache
      with:
        path: |
          ab-results-README.md-filtered.json
          ab-results-README.md-markdown-table.json
          ab-results-README.md.json
        key: ${{ runner.os }}-awesome_bot-${{ hashFiles('README.md') }}

    - name: Install and run awesome_bot
      if: steps.awesome_bot_cache.outputs.cache-hit != 'true'
      run: |
        gem install awesome_bot
        awesome_bot --allow 429 --allow-redirect --allow-dupe --allow-ssl -w ipfs.io README.md || echo

    - name: Remove broken links
      id: remove-broken-links
      run: |
        node scripts/remove-broken-links.js
        echo "Changed files:"
        git ls-files -m
        changed_data_files_count=$(git ls-files -m data | wc -l | tr -d ' ')
        echo "changed_data_files_count='$changed_data_files_count'"
        echo "::set-output name=changed_data_files_count::$changed_data_files_count"

      # git checkout -b remove-broken-links || git branch remove-broken-links
    # - name: Commit changes
    #   if: steps.remove-broken-links.outputs.changed_data_files_count != 0
    #   id: commit-changes
    #   run: |
    #     git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
    #     git config --local user.name "github-actions[bot]"
    #     # git checkout remove-broken-links || git checkout -b remove-broken-links
    #     git add data
    #     git commit -m "chore: Remove broken links"
    #     new_commit_sha=$(git log --pretty=format:'%h' -n 1)
    #     echo "new_commit_sha='$new_commit_sha'"
    #     echo "::set-output name=new_commit_sha::$new_commit_sha"
    #     git push

    - uses: EndBug/add-and-commit@v9
      if: steps.remove-broken-links.outputs.changed_data_files_count != 0
      with:
        add: 'data'
        new_branch: remove-broken-links
        message: 'chore: Remove broken links'
        push: 'origin remove-broken-links --set-upstream --force'
        pull: '--rebase --autostash'
        author_name: 'GitHub Action'
        author_email: 'action@github.com'

    # - name: Create Pull Request
    #   if: steps.remove-broken-links.outputs.changed_data_files_count != 0
    #   uses: actions/github-script@v6
    #   with:
    #     script: |
    #       const { repo, owner } = context.repo;
    #       const result = await github.rest.pulls.create({
    #         title: 'chore: Remove broken links',
    #         owner,
    #         repo,
    #         head: '${{ steps.commit-changes.outputs.new_commit_sha }}',
    #         base: 'remove-broken-links',
    #         body: [
    #           'This PR is auto-generated by',
    #           '[.github/workflows/broken_link_cron.yml](https://github.com/ipfs/awesome-ipfs/actions/workflows/broken_link_cron.yml).'
    #         ].join('\n')
    #       });

    #       github.rest.issues.addLabels({
    #         owner,
    #         repo,
    #         issue_number: result.data.number,
    #         labels: ['kind/maintenance', 'need/maintainers-input', 'bot']
    #       });

    # - uses: peterjgrainger/action-create-branch@c2800a3a9edbba2218da6861fa46496cf8f3195a # v2.2.0 - https://github.com/peterjgrainger/action-create-branch/commit/c2800a3a9edbba2218da6861fa46496cf8f3195a
    #   if: steps.remove-broken-links.outputs.changed_data_files_count != 0
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     branch: 'remove-broken-links'
    #     sha: '${{ github.sha }}'

    # - name: Push changes
    #   if: steps.remove-broken-links.outputs.changed_data_files_count != 0
    #   uses: ad-m/github-push-action@v0.6.0
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     branch: remove-broken-links
    # - uses: stefanzweifel/git-auto-commit-action@49620cd3ed21ee620a48530e81dba0d139c9cb80
    #   if: steps.remove-broken-links.outputs.changed_data_files_count != 0
    #   with:
    #     # Optional. Commit message for the created commit.
    #     # Defaults to "Apply automatic changes"
    #     commit_message: "chore: Remove broken links"

    #     # Optional. Local and remote branch name where commit is going to be pushed
    #     #  to. Defaults to the current branch.
    #     #  You might need to set `create_branch: true` if the branch does not exist.
    #     branch: remove-broken-links-${{ github.run_id }}

    #     commit_options: '--no-verify --signoff'

    #     # Optional glob pattern of files which should be added to the commit
    #     # Defaults to all (.)
    #     # See the `pathspec`-documentation for git
    #     # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203
    #     # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec
    #     file_pattern: data/*
    #     repository: .
    #     add_options: '-A'
    #     push_options: '--force'
    #     skip_dirty_check: true
    #     skip_fetch: true
    #     skip_checkout: true
    #     disable_globbing: true
    #     create_branch: true

    - name: pull-request
      if: steps.remove-broken-links.outputs.changed_data_files_count != 0
      uses: repo-sync/pull-request@65785d95a5a466e46a9d0708933a3bd51bbf9dde
      with:
        source_branch: "remove-broken-links"
        destination_branch: "test/broken-links-PR-creation"
        pr_title: "chore: Remove broken links"
        pr_body: "Automated PR created by .github/workflows/broken_link_cron.yml"
        pr_label: "kind/maintenance"
        pr_draft: false
        pr_allow_empty: false
        github_token: ${{ secrets.GITHUB_TOKEN }}
